// 1525. Number of Good Ways to Split a String.cpp : This file contains the 'main' function. Program execution begins and ends there.
/*
You are given a string s, a split is called good if you can split s into 2 non-empty strings p and q 
where its concatenation is equal to s and the number of distinct letters in p and q are the same.
Return the number of good splits you can make in s.

Constraints:
s contains only lowercase English letters.
1 <= s.length <= 10^5
*/

#include <iostream>
#include <algorithm>
#include <string>
int numSplits(std::string s);
bool distXor(std::string s1, std::string s2);

int main()
{
    std::string s = "dddabadacbdbbabbaeccaedceaedacceebdedadacbeeceacedbcbccdcdadcdeeaadaeadcbacbaacacadcabbcaabebcecdaebecbdbcdbbebaaaacaacdbdcbaabccdeedceeedeaacbecccadaadacaaccbdaaaeaeceaeecdeddeccdeadeadddbadbbbacdbdcbcaeaaacecaadacddcadebeddacccecaccedeabacbabdbaacddcbbbdeecadebdebcaecbcbdeedbdaceebcacbcaaebbdecaeadeadeeccedcbcebaeabbbbeaeaaaeeedabcdaecceddeccdbcdddcbccadaaaddcdcbddbeaadcdadedeeccadbaecbcbebcceadaabcdcadabbcbbbcbaeadacbabdadbddbedcecebbccbcbcabcdcbecaaaaededaedbdebadaebacaeabbebbbaccbacedccbbbecbbbadbaebabbcbeaccbceecbeeaacbbbddcccccadedecceadccddccdbcdebaaeabeeeccaebcbecdeecbddeeacecaacccebdcddeaebabbeaaaaceaeeecbabedacbacaccdbbccddebaaecbaddeacecdabdabaecaadecbcdbbeecccbdcbbaaaaadaaeddaebeacdaadaeaaeaceadbbbedaeecaceaebbeeddebbacbcbabdcebdbcebcbedbebeaacebacdbaedbaeeadacccaadadcacaecaebbbbecddbcacdcadcbdaaaadebcdedcdaeddecaaedccaaabbbeabdbedbccdcbecbbdbddbabdadbeedeaeeaeccdeaadeebeececaedebdbdedbabbcabecebdedeeabebabbebaebbdaeaedcbeebacaccdcdcecedceccabebdddbddcabcdbccbbdadebcdaadeacbacceacdadacdceecceebdcbeccebcaebdbdcebaecbdccdaecaaecdabcbddeccdcbccbecacceccbdbcabbacaaecdaeccedacbbcddadacbecbcecdcdacdbbcbbdcbddadcbabadbdbbbaaabcedadaedcddadaadcaeebcacdbebecbbacbbccaeaebcabcdedbabbbbdeeecbbaabcaddaebbedaadeacacdbbaabaaaeedadeaebeaddaaddadebdadabdbdaacddceeabddbcdecaaebaadbcacaddadbeeabdacdaeadacacbddcabeaebaadebcceacdeeaddcbaeecacabcbceddccececebebbbadeececadcceeeebddeeecadadbaadebcccebacccabbcceadaaaedeaebeecbadbeccecdbbbdeaccdddbeaddbabeebcddabcccdaabdabcdbbcbaadecccadbaecdcbbbecbdeddacabcadaebadeddbbdcaabbeaebcacbeabcbebbacddeadaeaceaabbdbebaccbadddddceaddbbeadbeaecebadadaadaddbedabdcbcaedbcedecccdaddbaacdacebaadeaaeabcbccccadbeaaebaecbabdeadcebeaadbdccabecaabceecabeedbcccedcdeeeeeccdedbeebabbeccbcadedceaedaceddacabaadbcaaeaccaadaddcaebaaebedceaabbcbcebbbcccddcabeacdaebacdbebcececbbadaeeeacaadedaacaceedbabcedcadcaaadeccaadcaecebcdbdaeacedcacbdedaeddaacdbaabebcccabaddebeaaceaaccabaecbbccddabeabadedbdadcbdeeddebdadccadbaaadccadecbedeadddcdcaebaaacdecbedcbeeebeabddacdcdedcceabaedecdccaeeebdacccabebbaaeeeaaccbccbecdeaabeeccceddcbabedcaaacbdebeeeadaceabdcddeaaaddddddeebaedecdbcedaadbbdbeedceaabcdbdbeaadeebbedbaacdbbcdebbedcdcebdaacbccedeebacbaaaecebddddabcecbeddadebaddecebccebaaececeddccbbdeecbacdcbcdcecbadbecaaeeccececbeddbebcaaddccbacacdaeaedcbadadbdbedebacdeddbadaeebeccbecbdebbddecddcaaacbddbbaddaaeeedeeddedbadcbddacbccdaeedaeeabcbabeedecbcbeaadeaaedeacbaaaecddcecbceeeddedddedbbeebcbececdacbceaaeabbaaddcbeaecacacbbccdaecbbabdcbdbdadebcbaeecebedaacebcbccabcabbbaedeaecddbbcdbbdebebbdaddcdbdcebdbcbdaabaaccbeadbdbbeaadccccbbccdebadbdaadabcbecddebecdbceecabceaddacdccceedddeabcdbcbbdaacbcceeebbcbbacbbcdaebbcebdaebbbaaececdcddcaaadeccceabdbdeacdcddcdaaacaedbcdeecebeeeecceccbddbdacdceaddabccbaccabacdcbcadccaeaaaaaecdecddabeaddbbdbdeddadacebeaddbeaddcadccccababcedcaebedbadebeaacdbcbcbdaadeaecdddacdaaeedddbdaddbebccdceecaaddddaadcabdeccdaccaacbdcaeaccaabcbbadccdeceedaedbacdeaecdeeeabadaabebdadceddccdcabebddcaabdebccdeedaaaecdadbaeebecebaadcccabebcaecbdbabbdddcbecacbdacdacadbebbabdbbbddabbbbdcdedaddbdbabdbaebeebaadeeaccadeaeaedcaeacdcacbeabededbedabaeddedadbbeeaaaaadbdaedaadecebceccbbedddecabdbaebddeaeeecdcedeacddddbeedeeaacbdbceedaaebbbeabaeddacddbbbeeddabbbeeedeedadceaecbeadacaacbebddeaacbaadeceeecaeedaaaebbbecdbaaeceebcbbdcbdaddceceebcaaddcbbdbaadcbdadaddababdaaaebbaaabedacdbcaccecbeaceebbaedcccbdccebcaddbcaaedbadeadbccaedacbeecddcccebcdbcbaaaabcedbcdcecbdcbbebadaeeaeacdbaadecdcbceacbcdcaaaabcacaecbaeeaaacabeedaebceabeaaebdebccabaababbcbbeabacaeceaebcddcdbceeedcdcedbbcbeddabdddaceddcedecdeaddbeaacdeaeeedcbdeddedccabadecbdbeaeceadbaddbbdbebbabdaeacdaaeeceaadaeaceccecdadeabbddcceaceeeacdcdddddecaebccdabcbaebbdbdcdebebcabbdeddddaacadacbdeecdebcedeccebbbabdaddbecacaeceaaedbedcdacddaebccbdceacebccabaaeaaadceaeddcdecdbbaeaabdbeabbbbdbbeededdaeaabeeacdaecdabaebedbbabbdacaccbbdecebcebcaebbcbdadeaabecdcbddecdabaacbddbdbcbcdacccdadddcdadbeecabbcdddbcecdcdcadeceacdeeaebcedeeaceaaddcbeeaeeeeaeeceeaccbcbcaeadddaadcebbdbdccacebddeccdbebdbaadacbbcacdebebcdacacdcdedabceaedbcaedecebbdbdededbaeaaaeedbedbcddeeddddbcdaeeabbadabadaabdbcdbbdabbbebaeecbedbaeceaccdecbacbedceecbbbdcaceadacacebbbddbeeaacaaeabdecadceaacaeaaeeddeadbbcacdeebcaccdbbbeebdcdeacabcdcebeaeecacedbcbdcedcbbabadcebaabdacbeddcbacedabbcbebbeebaebaccbadcdbacdcaeadedceabdcecbebdaaceeabcaaabeddcceeddcaccbaebceeebbadcedacdcdbcbabeddebecadaaccbcacbadccdeaceecbccbbbccceaadcaaabbeecadaebadaabbdbeabdaeeecbececbcdecaaedacdbeacececdbacddadcbceeabbeeeaccabbcccdbdaedbbedeaeaddeddecccecabdacedeabdaebebedecaeaccadbdebdeacdadedebececcbdedcecbecacacbeadebdedcddeedddbcdbcaedbeecddaccabbaaaecbbdedaadbbdadaddaeeeaeabdaadcbaedebcdcacbbcdecaabaedceebabcdebdbeebaeecdcbabcaceadbdaaebcadeabdbeccececcbcbccddacaaaddedbbbdecacceddedcbcceceddebbbadeeaaadabeddaaccdbebdeabebcbbeabceededebcbceebbeebddbdecebeebcaebcabddeacaeeadccedbcebabddadedbeeadacdccaaecbedbbccaeadebdbaeccbcebddeeaadbbcccaedaeeeeadbeebbdbddccbbadbabccccedebbbbabcdabeebdcbccccbedceddeecbaedddacccedeabdbdbdeeadacddcebdddbcecbebeeaccdbcbeeaecaacbdabcceeaecdceacbeddecdeddecabaeaaeddcaecacbddbacbdeabdeaabdedccedeacddadaaaecabdeccedaaecaccdedcdbbceccbbabaacbcbbddecbcccbacbcddeaaadcadecbcaaeeeabaeecaebdacaabedceddacbeabdcacebbadedeadadbbeadceceeaebeeaeadddaacaadeaacdedcaccbaececaedaababdebeabebbbcdddbcebdcbcaebbbecacdbebdaadbbadeaeccaacbababaaaeebacedaeabcccdeacaaaadcbeebdececdaeabeeaedcbacbedcdcaabdadcdbeeceebcdcdeddcacacbaddedabcabaddabeedcdeddadaaeccbcabbcdabecdadccacabccedaadedcbdaeacacdeabcdccebeacdedeeaeeaaeddceceeceaaabdaabacbcbcbcdbcbeaaeaddaccbecdaabcbddbabeddbecedbeaeadeedbbdbbaecbbbbcbedcbbaabacdbceedaabdcecaacdeadbaeccddcdcbbccdbcbdeeecceddaddbcdeadceeeecaceabaddedcaaeebdacccdbdbbdaeadcacbecaeaeaaddadabbdebdeaccdbbbaddcceaeebabdceebdaacadaaacdebbeeadababdddedddabbbcbecccdbbacbbeebcadbcadebbeaabeebbbabbaeecbabbebeebcddebbecbceccabedaebdaebabceebdeebdcbdddddddeeadbebdacbddbaeadbedbceeedcaacaeeeaaadebbaeeeeaabadcbeacaceeacaecdcdeaacbbaceeedaadddebacbedcaebaeddacabaededebcdcecacaacaedbedcccaeddbacbadedbeaddbccabcddebeaecaadebbbdcbcaddeebdcceebecbaebcaeadbceedcbdbebadceaeeabbbdcaecaaecdcceeddceeeacbebcdeaabddcdcecdbdebabdbcaaecbceecdecbbdebdecbeaaeccebddbdcbbbebedecbbcaaeeddcbbebeededecbaebeadabbadedbaabddcedadaebddbcdadcaaedbddebbbdacddebbcbccdadbaaaebbbcebbdbbecaeadedbaeadbddcceedbbdaceedbdebdabccebbcdeedeecccabebbdedaedbbdbbaaabaceeeeeeddcebacbcaddcdceedabcbcddccbabdaccaaecedecccaecacedeeedabaadbadbdcbbbaaecaccabbcadabbaeabdeebeaabdedebceaacbbadddbacceabeeaceeddeedaaddaeeaeccbbeaeddbacbebdbbccdceeabcedabdebadbbccddadbbbcbcebaaeabcdeecbcdbcbcbeebbcdebeecdcdcceaeddebbcebeebddaadadbddacacacadcacdcabececacaecaaabdbbaadbbedcdcadbbddabbcccebceddceedaeadaaebcbcecedeadcccaeadaeacdcdaaacdcebebcdacbcaddcdceccbabdebababbeabacccdbaacabdacccdbbeecceaceceaeadbddacbceacebbaaaacbeedddeecbaebcabbcebaebaebbcdbedabaaeaacdedadcbacdccdeebcdabcadeababbeaebebacacdbedbcdadcedccdebbcbbeaaeceedcccdeccdbdaacbedbbcceeedbeebdadbbacadeeecdcdaecccbbdaedbdddacecedacbcedbceeacabcceecacadaadddbddbccedabcaeeeaebaecadcdaaedacceeaaaceabacecadeacadbbcecdbaabdcdaeccdabbdccccadebdceeebeeaaabddddaadecebceedecabdccabcbdeceaceceebbdbbeebbcaceeabddadeeeccaabeeebeddeeccdeceaceceacdedcedaacbddaaecaccbecaeabceaeadccbeeeeeeaedbbaeecaacecadccaeeacaaebcdccebdcaebbeaccbddaaabdbdcdbabccecebdcecbbbcbacbddbdddececcdddaccddacdaebaadbeaaaaebaaaedbcbccaddaecaaeccabbabcbedbeaecbccccbdcecdadabbcdddddeecadaacccbaebddeeeaabbcbccccbbbdebbabebcdacdcaaeccedabeeaaacbeacbebeccaabdbebebdebbadbeceeedcdcdbdecacabdebedccdeebadacccddabccceddcccedbedecaacbbbbddbdbbcdacbeaadcceccbbbaaccacbbadecdcddaaeedceddacbaaaedddbedebdbadccbebbdbcaadddbeaadcaaebdcaeadaacaaaaaabddcbbaddaebcebcbbacbeeadbaadeebdeaebbcecdaaaeacaabbaddabacdcceabecaaabbebeacbacadaeedcedaeebecaceecbabccedcdedbecdceabddacedddcbcbbbaebddeecbcecdcaddadadcadeedccdbbadeccecdedcbdcdebcdadadabbebdebecbbcbebdebdddaaedcabceaecdaadedddadacabaaaebdaeddbbdadabadadcaaadccddcdcedaadeeabaacdbdcdccadcaadceddedbcbaddcebebdbccacceddeaadccabadceceeabdaccecdeebadcbcccdddaceebbeadcbecbbdecbeeeebbacedbbadaceeadbbadeecaadedeaeaccbbbcccacadcbaeebdbbeddbacaecabcbdaebdcdbadeaacbcbebebebbdceaadeaedaabedebeeaaebcddcaebeeadbedeadcaedbcbbcddcbabdecdedbedbbaebaabbcbedbbbdeceecedecbacdaebcbaaaebedaaabaccaebbcbeaaeeaabbbeedbddcccaedecbacacceedbeeaeadccacebacdeabbdbebccaaeadecccbcebababdbbdaececeedacbdcaeaadbeceddedcecabedacedddedcabdbaebdccaaaadeadededbeeebabeddacdeedcedecdddbbebebeadcaeacbdecdedcbeebaccccdbaaddbdeceabcaaedeacbeaebccbeaaecdccaddeddaaeccbccbcbebeacbbddbedddbdceddcbbbbcbbbbdaabcbbdedadaceeebaaedbedebadbebbaecbcdddaacdeebdeceacaaabececaaceedadaaaedccecabdceedbbcbeceacebcedaddcbddccadabccddcabccccceacdddebbbcabeebaacddebdbcecabbbbcbbadecaecaecedacebecbeaeadbbdeeddbcbebbdcaebadccabcaebbaceadeeaecbdecebdcbdcbcaacbddcaacdecbdbebdbceabdaebeedecbccebabeeeddeeccdebccacbaaabddcdadabacdeeedaadcbdaabbeaaebcacbbcdaaedabdcedbacdabbddcadbddcedeebabdccaeaddabcdebbeaacedcebbcdcaaeebcbaccaacbdbacceecdaeebcdbadccadbeddbdedddacebabcecbeeeeedcdaaaecdbbecddeddedcdabaebbceabceeedbcacadddadceecbcdaccaddecacacccdddeacbebbdaeadcadeddbceddadcaeabaebaccbaeedbeccadbebacadbeecbbdaabdbdbdbbdcbaedeaeedebaaddecbeddbbacaeaecdaecaebcdbccccaeacbaaedbecacadedcbeeaddececdebdbbbabebaacdebdbeeebacddedbcdccbdcacadebaabcccccaeccdbdeededadadbdbedaccbcedeeceacbcddddaaeabdcdcebceabeceecaabcbdeebbbabccbdcbaaededbbbdccdcabcddeedbcbbbaaacaceccdadedbecbbacebecdacaebbecdabadbccbacaecdbabcaaccdcacabadbcdbaeedbcedbdbbcdaaabcdcceabeacedddbbbbeecdaddcebccabbdcdaebeeadaaecdcbcddbddaabdbbcbedbbaaadaddbbbeddaeccdeaadeacebbdecdadbccceeacedddaeaadbdcaaeacabdacbdeacbcaeeaeeaaaadebbcbaabebdecaebcbeabddcdddcdbeeedcadcbebeeeedcccdcccebceadcdbacdebedcbdbbcbeebcaaeecbdcccbedcdcabaeecabcdabceeaeaddeddcbddbdceeaddaceeeaddcbcedbaecbbdccaaabaadeecaebbbbcebbdaabacdea";
    std::cout << s.length();
    //std::cout << numSplits(s);
}



/* Brute Force (Does not pass all the tests)
int numSplits(std::string s) {
    int count = 0;
    if (s.length() <= 1) {
        return 0;
    }
    for (int i = 1; i < s.length(); i++) {
        //std::cout << s.substr(0, i) << " " << s.substr(i, s.length() - i) << std::endl;
        if (distXor(s.substr(0, i), s.substr(i, s.length() - i))) {
            count++;
            std::cout << count << std::endl;
        }
    }
    return count;
}

bool distXor(std::string s1, std::string s2) {
    bool result = false;
    std::sort(s1.begin(), s1.end());
    std::sort(s2.begin(), s2.end());
    //std::cout << s1 << " " << s2 << std::endl;
    int count1 = 1, count2 = 1;
    int temp = s1[0];

    for (int i = 1; i < s1.length(); i++) {
        if ((s1[i]) != temp) {
            temp = (s1[i]);
            count1++;
        }
    }
    temp = s2[0];
    for (int i = 1; i < s2.length(); i++) {
        if ((s2[i]) != temp) {
            temp = (s2[i]);
            count2++;
        }
    }
    //std::cout << count1 << " " << count2 << std::endl;
    if (count1 == count2)
        result = true;
    return result;
}
*/

    
